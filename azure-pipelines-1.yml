trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  DOCKER_USERNAME: $(DOCKER_USERNAME)  # DockerHub username stored in Variables section
  DOCKER_PASSWORD: $(DOCKER_PASSWORD)  # DockerHub password stored as secret

stages:
  - stage: BuildDocker
    displayName: 'Build Docker Image'
    jobs:
      - job: Build
        displayName: 'Docker Build and Push'
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'DockerHubRegistry'
              repository: '$(DOCKER_USERNAME)/chancetek_devops'
              command: 'build'
              Dockerfile: '**/Dockerfile'
              tags: |
                latest
                $(Build.BuildId)
                
          - task: Docker@2
            displayName: 'Log in to DockerHub'
            inputs:
              containerRegistry: 'DockerHubRegistry'
              command: 'login'

  - stage: ScanImage
    displayName: 'Scan Docker Image with Trivy'
    dependsOn: BuildDocker
    jobs:
      - job: Scan
        displayName: 'Run Trivy Image Scan'
        steps:
          - script: |
              echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
              docker pull $(DOCKER_USERNAME)/chancetek_devops
            displayName: 'Login to Docker and Pull Image'

          - script: |
              sudo apt-get update
              sudo apt-get install -y wget
              wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.41.0_Linux-64bit.deb
              sudo dpkg -i trivy_0.41.0_Linux-64bit.deb
            displayName: 'Install Trivy'

          - script: |
              trivy image $(DOCKER_USERNAME)/chancetek_devops
            displayName: 'Docker Scan with Trivy'

  - stage: TestApp
    displayName: 'Run Selenium Tests'
    dependsOn: ScanImage
    jobs:
      - job: Test
        displayName: 'Run Selenium Tests'
        steps:
          - script: |
              # Here you would put the command to start your app or run Selenium tests
              python -m pytest tests/
            displayName: 'Run Selenium tests'

  - stage: PushImage
    displayName: 'Push Docker Image to DockerHub'
    dependsOn: TestApp
    jobs:
      - job: Push
        displayName: 'Push Docker Image'
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'DockerHubRegistry'
              repository: '$(DOCKER_USERNAME)/chancetek_devops'
              command: 'push'
              tags: |
                latest
                $(Build.BuildId)

